// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using VoteMap.Data;

namespace VoteMap.Data.Migrations
{
    [DbContext(typeof(VoteMapDbContext))]
    partial class VoteMapDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("VoteMap.Data.Models.Booth", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Point>("Location")
                        .HasColumnType("geography");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Booths");
                });

            modelBuilder.Entity("VoteMap.Data.Models.BoothCandidateResult", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BoothId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CandidateCampaignId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoothId");

                    b.HasIndex("CandidateCampaignId");

                    b.ToTable("BoothCandidateResults");
                });

            modelBuilder.Entity("VoteMap.Data.Models.BoothPartyResult", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BoothId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartyCampaignId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoothId");

                    b.HasIndex("PartyCampaignId");

                    b.ToTable("BoothPartyResults");
                });

            modelBuilder.Entity("VoteMap.Data.Models.BoothVote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BoothId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CandidateInformalVotes")
                        .HasColumnType("int");

                    b.Property<int>("CandidateValidVotes")
                        .HasColumnType("int");

                    b.Property<string>("ElectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ElectorateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PartyInformalVotes")
                        .HasColumnType("int");

                    b.Property<int>("PartyValidVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoothId");

                    b.HasIndex("ElectionId");

                    b.HasIndex("ElectorateId");

                    b.ToTable("BoothVotes");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Candidate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("VoteMap.Data.Models.CandidateCampaign", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CandidateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ElectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ElectionId");

                    b.HasIndex("PartyId");

                    b.ToTable("CandidateCampaigns");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Election", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CandidateInformalVotes")
                        .HasColumnType("int");

                    b.Property<int>("CandidateValidVotes")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartyInformalVotes")
                        .HasColumnType("int");

                    b.Property<int>("PartyValidVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Electorate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Electorates");
                });

            modelBuilder.Entity("VoteMap.Data.Models.ElectorateCandidateResult", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CandidateCampaignId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateCampaignId")
                        .IsUnique();

                    b.ToTable("ElectorateCandidateResults");
                });

            modelBuilder.Entity("VoteMap.Data.Models.ElectoratePartyResult", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ElectorateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartyCampaignId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ElectorateId");

                    b.HasIndex("PartyCampaignId");

                    b.ToTable("ElectoratePartyResults");
                });

            modelBuilder.Entity("VoteMap.Data.Models.ElectorateVote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CandidateInformalOrdinaryVotes")
                        .HasColumnType("int");

                    b.Property<int>("CandidateInformalSpecialVotes")
                        .HasColumnType("int");

                    b.Property<int>("CandidateSpecialVotesDisallowed")
                        .HasColumnType("int");

                    b.Property<int>("CandidateValidOrdinaryVotes")
                        .HasColumnType("int");

                    b.Property<int>("CandidateValidSpecialVotes")
                        .HasColumnType("int");

                    b.Property<string>("ElectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ElectorateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Enrolled")
                        .HasColumnType("int");

                    b.Property<int>("PartyInformalOrdinaryVotes")
                        .HasColumnType("int");

                    b.Property<int>("PartyInformalSpecialVotes")
                        .HasColumnType("int");

                    b.Property<int>("PartySpecialVotesDisallowed")
                        .HasColumnType("int");

                    b.Property<int>("PartyValidOrdinaryVotes")
                        .HasColumnType("int");

                    b.Property<int>("PartyValidSpecialVotes")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("ElectorateId");

                    b.ToTable("ElectorateVotes");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Party", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("VoteMap.Data.Models.PartyCampaign", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CandidateSeats")
                        .HasColumnType("int");

                    b.Property<int>("CandidateVotes")
                        .HasColumnType("int");

                    b.Property<string>("ElectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PartySeats")
                        .HasColumnType("int");

                    b.Property<int>("PartyVotes")
                        .HasColumnType("int");

                    b.Property<bool>("Registered")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("PartyId");

                    b.ToTable("PartyCampaigns");
                });

            modelBuilder.Entity("VoteMap.Data.Models.BoothCandidateResult", b =>
                {
                    b.HasOne("VoteMap.Data.Models.Booth", "Booth")
                        .WithMany("CandidateResults")
                        .HasForeignKey("BoothId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.CandidateCampaign", "CandidateCampaign")
                        .WithMany("BoothResults")
                        .HasForeignKey("CandidateCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booth");

                    b.Navigation("CandidateCampaign");
                });

            modelBuilder.Entity("VoteMap.Data.Models.BoothPartyResult", b =>
                {
                    b.HasOne("VoteMap.Data.Models.Booth", "Booth")
                        .WithMany("PartyResults")
                        .HasForeignKey("BoothId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.PartyCampaign", "PartyCampaign")
                        .WithMany("BoothResults")
                        .HasForeignKey("PartyCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booth");

                    b.Navigation("PartyCampaign");
                });

            modelBuilder.Entity("VoteMap.Data.Models.BoothVote", b =>
                {
                    b.HasOne("VoteMap.Data.Models.Booth", "Booth")
                        .WithMany("BoothVotes")
                        .HasForeignKey("BoothId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.Election", "Election")
                        .WithMany("BoothVotes")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.Electorate", "Electorate")
                        .WithMany("BoothVotes")
                        .HasForeignKey("ElectorateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booth");

                    b.Navigation("Election");

                    b.Navigation("Electorate");
                });

            modelBuilder.Entity("VoteMap.Data.Models.CandidateCampaign", b =>
                {
                    b.HasOne("VoteMap.Data.Models.Candidate", "Candidate")
                        .WithMany("Campaigns")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.Election", "Election")
                        .WithMany("CandidateCampaigns")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.Party", "Party")
                        .WithMany("CandidateCampaigns")
                        .HasForeignKey("PartyId");

                    b.Navigation("Candidate");

                    b.Navigation("Election");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("VoteMap.Data.Models.ElectorateCandidateResult", b =>
                {
                    b.HasOne("VoteMap.Data.Models.CandidateCampaign", "CandidateCampaign")
                        .WithOne("Result")
                        .HasForeignKey("VoteMap.Data.Models.ElectorateCandidateResult", "CandidateCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CandidateCampaign");
                });

            modelBuilder.Entity("VoteMap.Data.Models.ElectoratePartyResult", b =>
                {
                    b.HasOne("VoteMap.Data.Models.Electorate", "Electorate")
                        .WithMany("PartyResults")
                        .HasForeignKey("ElectorateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.PartyCampaign", "PartyCampaign")
                        .WithMany("ElectorateResults")
                        .HasForeignKey("PartyCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Electorate");

                    b.Navigation("PartyCampaign");
                });

            modelBuilder.Entity("VoteMap.Data.Models.ElectorateVote", b =>
                {
                    b.HasOne("VoteMap.Data.Models.Election", "Election")
                        .WithMany("ElectorateVotes")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.Electorate", "Electorate")
                        .WithMany("ElectorateVotes")
                        .HasForeignKey("ElectorateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Election");

                    b.Navigation("Electorate");
                });

            modelBuilder.Entity("VoteMap.Data.Models.PartyCampaign", b =>
                {
                    b.HasOne("VoteMap.Data.Models.Election", "Election")
                        .WithMany("PartyCampaigns")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoteMap.Data.Models.Party", "Party")
                        .WithMany("PartyCampaigns")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Election");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Booth", b =>
                {
                    b.Navigation("BoothVotes");

                    b.Navigation("CandidateResults");

                    b.Navigation("PartyResults");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Candidate", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("VoteMap.Data.Models.CandidateCampaign", b =>
                {
                    b.Navigation("BoothResults");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Election", b =>
                {
                    b.Navigation("BoothVotes");

                    b.Navigation("CandidateCampaigns");

                    b.Navigation("ElectorateVotes");

                    b.Navigation("PartyCampaigns");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Electorate", b =>
                {
                    b.Navigation("BoothVotes");

                    b.Navigation("ElectorateVotes");

                    b.Navigation("PartyResults");
                });

            modelBuilder.Entity("VoteMap.Data.Models.Party", b =>
                {
                    b.Navigation("CandidateCampaigns");

                    b.Navigation("PartyCampaigns");
                });

            modelBuilder.Entity("VoteMap.Data.Models.PartyCampaign", b =>
                {
                    b.Navigation("BoothResults");

                    b.Navigation("ElectorateResults");
                });
#pragma warning restore 612, 618
        }
    }
}
